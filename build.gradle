plugins {
    id "groovy"
    id "java-gradle-plugin"
    id "com.gradle.plugin-publish" version "1.3.1"
}

repositories {
    mavenCentral()
}

ext {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

pluginBundle {
    website = "https://github.com/hannesa2/adfghjxyz"
    vcsUrl = "https://github.com/hannesa2/adfghjxyz.git"
    tags = ["android", "adb", "emulator"]
}


gradlePlugin {
    plugins {
        grabScreenshotPlugin {
            id = "org.grabScreenshot"
            version = getTag()
            implementationClass = "com.github.screenshot.ScreenshotPlugin"
            displayName = "Gradle grab ScreenshotPlugin"
            description = "A plugins that grab Screenshots from adb devices"
        }
    }
}

dependencies {
    implementation "org.codehaus.groovy:groovy-all:3.0.24"
    implementation "org.jsonschema2pojo:jsonschema2pojo-core:1.1.1"

    testImplementation platform("org.junit:junit-bom:5.13.3")

    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
    testImplementation gradleTestKit()
}

test {
    useJUnitPlatform()
}

static def getTag() {
    def tagVersion = "$System.env.VERSION"
    if (tagVersion == "null") {
        // with local un-commited changes a -DIRTY is added
        def processChanges = "git diff-index --name-only HEAD --".execute()
        def dirty = ""
        if (!processChanges.text.toString().trim().isEmpty())
            dirty = "-DIRTY"

        def process = "git describe --tags".execute()
        tagVersion = process.text.toString().trim() + dirty
    } else {
        def tagVersionToken = tagVersion.split("/")
        if (tagVersionToken.size() > 2)
            tagVersion = tagVersionToken[2]
        else
            tagVersion = tagVersionToken[0]
    }
    return tagVersion
}
